@inherits LayoutComponentBase
@inject NavigationManager Navigation

<MudThemingProvider IsDarkMode=" _isDark " />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h6" Class="ml-3">Pro Consulta</MudText>
        <MudSpacer />
        <MudStack Row>
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />

            @if (_isDark)
            {
                <MudIconButton @onclick="ThemeToggle" Icon="@Icons.Material.Filled.WbSunny" Color="Color.Inherit" />
            }
            else
            {
                <MudIconButton @onclick="ThemeToggle" Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" />
            }

            <AuthorizeView>
                <MudIconButton Icon="@Icons.Material.Filled.ExitToApp" @onclick="LogOFF" Color="Color.Inherit" />
            </AuthorizeView>

        </MudStack>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDark = true;
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void ThemeToggle()
    {
        _isDark = !_isDark;
    }

    private void LogOFF()
    {
        Navigation.NavigateTo("/Account/Manage/Logout");
    }
}